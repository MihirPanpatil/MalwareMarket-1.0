import requests
import time

class IPFSHandler:
    def __init__(self):
        self.local_api = 'http://127.0.0.1:5001/api/v0'
        self.local_gateway = 'http://127.0.0.1:8080'
        
    def upload_file(self, file_path):
        with open(file_path, 'rb') as file:
            files = {'file': file}
            response = requests.post(f'{self.local_api}/add', files=files)
            if response.status_code == 200:
                ipfs_hash = response.json()['Hash']
                # Pin the file locally
                self.pin_file(ipfs_hash)
                return ipfs_hash
            return None
    
    def pin_file(self, ipfs_hash):
        requests.post(f'{self.local_api}/pin/add?arg={ipfs_hash}')
        
    def get_file(self, ipfs_hash):
        # Try local gateway first
        response = requests.get(f'{self.local_gateway}/ipfs/{ipfs_hash}')
        if response.status_code == 200:
            return response.content
        
        # If local fails, try public gateway
        public_response = requests.get(f'https://ipfs.io/ipfs/{ipfs_hash}')
        if public_response.status_code == 200:
            # Pin it locally for future access
            self.pin_file(ipfs_hash)
            return public_response.content
        return None
