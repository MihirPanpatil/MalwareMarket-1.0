from solana.rpc.api import Client
from solders.keypair import Keypair # type: ignore
from solders.instruction import Instruction # type: ignore
from solders.message import Message # type: ignore
from solders.transaction import Transaction # type: ignore
from .solana_key_handler import SolanaKeyHandler
import base58

class SolanaHandler:
    def __init__(self):
        self.client = Client("https://api.devnet.solana.com")
        self.key_handler = SolanaKeyHandler()
        
    def register_dns(self, ipfs_hash, domain_name):
        instruction = Instruction(
            program_id=base58.b58decode("DnsProgram111111111111111111111111111111111"),
            accounts=[],
            data=f"{domain_name}:{ipfs_hash}".encode()
        )
        
        recent_blockhash = self.client.get_recent_blockhash()["result"]["value"]["blockhash"]
        transaction = Transaction.new_signed_with_payer(
            [instruction],
            self.key_handler.get_public_key(),
            [self.key_handler.keypair],
            recent_blockhash
        )
        
        result = self.client.send_transaction(transaction)
        return result['result']


    def resolve_domain(self, domain_name):
        response = self.client.get_account_info(
            base58.b58decode("DnsProgram111111111111111111111111111111111")
        )
        return response.get('result', {}).get('value', {}).get('data', '')
